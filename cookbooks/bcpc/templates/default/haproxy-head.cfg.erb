################################################
#
#              Generated by Chef
#
################################################

global
  daemon
  user haproxy
  group haproxy
  pidfile /var/run/haproxy.pid
  stats socket /var/run/haproxy/haproxy.asok level admin
  log /dev/log local0 info
  maxconn 8000

defaults
  log global
  source <%=node['bcpc']['management']['vip']%>
  mode http
  option http-server-close
  option abortonclose
  option tcplog
  option dontlognull
  option nolinger
  option redispatch
  retries 3
  timeout http-request 10s
  timeout queue 1m
  timeout connect 5s
  timeout check 10s
  timeout client 30m
  timeout server 30m

listen mysql-galera
  bind <%=node['bcpc']['management']['vip']%>:3306
  timeout client 24h
  timeout server 24h
  mode tcp
  balance leastconn
  option tcplog
  option tcpka
  option httpchk
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:3306 check port 3307 inter 5s rise 1 fall 1 observe layer4 backup" %>
<% end -%>

listen keystone-api
  bind <%=node['bcpc']['management']['vip']%>:5000 <%= (node['bcpc']['protocol']['keystone'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 300
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:5000 check inter 5s rise 1 fall 1" %>
<% end -%>

frontend keystone-admin
  bind <%=node['bcpc']['management']['vip']%>:35357 <%= (node['bcpc']['protocol']['keystone'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  option tcplog
  default_backend keystone-admin-backend

frontend keystone-admin-httponly
  bind <%=node['bcpc']['management']['vip']%>:35358
  option tcplog
  default_backend keystone-admin-backend

backend keystone-admin-backend
  balance source
  option httpchk GET /
  http-check expect status 300
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:35357 check inter 5s rise 1 fall 1" %>
<% end -%>

listen glance-api
  bind <%=node['bcpc']['management']['vip']%>:9292 <%= (node['bcpc']['protocol']['glance'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 300
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:9292 check inter 5s rise 1 fall 1" %>
<% end -%>

listen glance-registry
  bind <%=node['bcpc']['management']['vip']%>:9191 <%= (node['bcpc']['protocol']['glance'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 401
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:9191 check inter 5s rise 1 fall 1" %>
<% end -%>

listen cinder-api
  bind <%=node['bcpc']['management']['vip']%>:8776 <%= (node['bcpc']['protocol']['cinder'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
<% if is_mitaka? %>
  http-check expect status 300
<% else %>
  http-check expect status 200
<% end %>
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:8776 check inter 5s rise 1 fall 1" %>
<% end -%>

listen nova-ec2
  bind <%=node['bcpc']['management']['vip']%>:8773 <%= (node['bcpc']['protocol']['nova'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 400
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:8773 check inter 5s rise 1 fall 1" %>
<% end -%>

listen nova-api
  bind <%=node['bcpc']['management']['vip']%>:8774 <%= (node['bcpc']['protocol']['nova'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 200
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:8774 check inter 5s rise 1 fall 1" %>
<% end -%>

listen heat-api
  bind <%=node['bcpc']['management']['vip']%>:8004 <%= (node['bcpc']['protocol']['heat'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 300
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:8004 check inter 5s rise 1 fall 1" %>
<% end -%>

listen heat-api-cfn
  bind <%=node['bcpc']['management']['vip']%>:8000 <%= (node['bcpc']['protocol']['heat'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 300
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:8000 check inter 5s rise 1 fall 1" %>
<% end -%>

listen ceilometer-api
  bind <%=node['bcpc']['management']['vip']%>:8777 <%= (node['bcpc']['protocol']['ceilometer'] == 'https') ? "ssl crt /etc/haproxy/haproxy.pem" : "" %>
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 401
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:8777 check inter 5s rise 1 fall 1" %>
<% end -%>

listen novnc
  bind <%=node['bcpc']['management']['vip']%>:6080 ssl crt /etc/haproxy/haproxy.pem
  balance source
  option tcplog
  option httpchk GET /vnc_auto.html
  http-check expect status 200
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:6080 check inter 5s rise 1 fall 1" %>
<% end -%>

frontend http
  bind <%=node['bcpc']['management']['vip']%>:80
  option tcplog
  default_backend http-backend

frontend https
  bind <%=node['bcpc']['management']['vip']%>:443 ssl crt /etc/haproxy/haproxy.pem
  option tcplog
  stats enable
  stats uri /haproxy
  stats hide-version
  stats realm Haproxy\ Statistics
  stats auth <%=get_config('haproxy-stats-user')%>:<%=get_config('haproxy-stats-password')%>
  reqadd X-Forwarded-Protocol:\ https
  acl url_horizon path_beg /horizon
  use_backend horizon-backend if url_horizon
  acl url_horizon_static path_beg /static
  use_backend horizon-backend if url_horizon_static
  acl url_rabbitmq path_beg /rabbitmq
  use_backend rabbitmq-web-backend if url_rabbitmq
  default_backend http-backend

backend http-backend
  balance source
  option httpchk GET /
  http-check expect status 200
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:80 check inter 5s rise 1 fall 1" %>
<% end -%>

backend horizon-backend
  balance source
  option httpchk GET /
  http-check expect status 200
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:9999 check inter 5s rise 1 fall 1" %>
<% end -%>

backend rabbitmq-web-backend
  balance source
  option httpchk GET /
  http-check expect status 200
  reqrep ^([^\ :]*)\ /rabbitmq/(.*) \1\ /\2
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:55672 check inter 5s rise 1 fall 1" %>
<% end -%>

frontend radosgw-http
  bind <%="#{node['bcpc']['floating']['vip']}:#{node['bcpc']['ports']['haproxy']['radosgw']}"%>
  option tcplog
  default_backend radosgw-http-backend

frontend radosgw-https
  bind <%="#{node['bcpc']['floating']['vip']}:#{node['bcpc']['ports']['haproxy']['radosgw_https']}"%> ssl crt /etc/haproxy/haproxy.s3.pem
  option tcplog
  default_backend radosgw-http-backend

backend radosgw-http-backend
  balance leastconn
  option httpchk GET /
  http-check expect status 200
  source <%=node['bcpc']['floating']['vip']%>
<% @radosgw_servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['floating']['ip']}:#{node['bcpc']['ports']['radosgw']} check inter 5s rise 1 fall 1 observe layer7" %>
<% end -%>
